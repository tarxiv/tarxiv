#!/usr/bin/env python
from tarxiv.pipeline import TNSPipeline
import argparse

# Get config dir from arguments
parser = argparse.ArgumentParser('tns-ingest',
                                 description="TarXiv TNS Alert ingestion. "
                                        "Monitor new TNS alerts, and query relevant data into database.'")
parser.add_argument('--debug', action='store_true', default=False,
                         help='set to enable printing/logging in debug mode')
group = parser.add_mutually_exclusive_group()
group.add_argument("--alerts", action="store_true",
                   help="Ingest live TNS alerts from email")
group.add_argument("--bulk_missing", action="store_true",
                   help="Ingest all TNS objects not already in database")
group.add_argument("--bulk_update", action="store_true",
                   help="Update all TNS objects, even if in database")
group.add_argument("--daily_update", action="store_true",
                   help="Update current active TNS objects")

args = parser.parse_args()

# Create survey objects
if args["alerts"]:
    txv_tns = TNSPipeline(module="pipeline",
                          log_name="tns_alert_pipeline",
                          debug=args.debug)
    # Run the pipeline
    txv_tns.run_pipeline()

elif args["bulk_missing"]:
    txv_tns = TNSPipeline(module="pipeline",
                          log_name="tns_bulk_ingest",
                          debug=args.debug)
    # Run the pipeline
    txv_tns.download_bulk(include_existing=False)

elif args["bulk_update"]:
    txv_tns = TNSPipeline(module="pipeline",
                          log_name="tns_bulk_ingest",
                          debug=args.debug)
    # Run the pipeline
    txv_tns.download_bulk(include_existing=True)

elif args["daily_update"]:
    txv_tns = TNSPipeline(module="pipeline",
                          log_name="tns_bulk_ingest",
                          debug=args.debug)
    txv_tns.daily_update()
